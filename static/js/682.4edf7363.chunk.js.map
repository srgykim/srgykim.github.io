{"version":3,"file":"static/js/682.4edf7363.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/regenerator/index.js","../javascript/esm|/Users/srgykim/Downloads/srgykim-koshelek-ru-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../javascript/esm|/Users/srgykim/Downloads/srgykim-koshelek-ru-test/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../javascript/esm|/Users/srgykim/Downloads/srgykim-koshelek-ru-test/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../javascript/esm|/Users/srgykim/Downloads/srgykim-koshelek-ru-test/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../javascript/esm|/Users/srgykim/Downloads/srgykim-koshelek-ru-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","BinanceSDK.js","components/Content.js","../node_modules/regenerator-runtime/runtime.js"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const binanceSDK = {\n    async getOrderBook(currency) {\n        let resData = await fetch(`https://api.binance.com/api/v3/depth?symbol=${currency}&limit=10`)\n        .then(res => {\n            if (res.status !== 200 && res.status !== 201) {\n                throw new Error('Failed!');\n            }\n            return res.json();\n        })\n        .then(async (resData) => {\n            return resData;\n        })\n        .catch(err => {\n            return err;\n        });\n\n        return resData;\n    },\n    getOrderBookUpdates(currency) {\n        return new Promise((resolve, reject) => {\n            let ws = new WebSocket(`wss://stream.binance.com:9443/ws/${currency}@depth`);\n            ws.onopen = () => {\n                resolve(ws);\n            };\n            ws.onerror = (err) => {\n                reject(err);\n            };\n    \n        });\n    }\n  };\n  \nexport default binanceSDK;\n","import React, { Component } from 'react';\n\nimport binanceSDK from '../BinanceSDK';\n\nexport default class Content extends Component {\n    state = {\n        asks: [],\n        bids: []\n    };\n\n    componentDidMount() {\n        const { context } = this.props;\n        \n        binanceSDK.getOrderBook(context.currency)\n            .then(response => {\n                this.setState({\n                    asks: response.asks,\n                    bids: response.bids\n                });\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n        binanceSDK.getOrderBookUpdates(context.currency.toLowerCase())\n            .then(ws => {\n                ws.onmessage = (message) => {\n                    let newAsks = JSON.parse(message.data).a;\n                    let newBids = JSON.parse(message.data).b;\n                    \n                    this.setState({\n                        asks: [...newAsks, ...this.state.asks],\n                        bids: [...newBids, ...this.state.bids]\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    render() {\n        let {\n            asks,\n            bids\n        } = this.state;\n\n        const { context } = this.props;\n\n        return (\n            <div className=\"container\">\n                <h1>Тестовое задание кошелёк.ру</h1>\n                <p>Ким Сергей. Телеграм @srgykim</p>\n                <br />\n                <table className=\"fixed_header\">\n                    <thead className=\"ask\">\n                        <tr>\n                            <th scope=\"colgroup\" colSpan=\"3\" className=\"my-sticky-table-header1\">Покупка {context.currency}</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\" className=\"my-sticky-table-header2\">Цена</th>\n                            <th scope=\"col\" className=\"my-sticky-table-header2\">Кол-во</th>\n                            <th scope=\"col\" className=\"my-sticky-table-header2 d-none d-lg-table-cell\">Всего</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {asks.map((ask) => (\n                            <tr>\n                                <td>{ask[0]}</td>\n                                <td>{ask[1]}</td>\n                                <td className=\"d-none d-lg-table-cell\">{ask[0] * ask[1]}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <br /><br />\n                <table className=\"fixed_header\">\n                    <thead className=\"bid\">\n                        <tr>\n                            <th scope=\"colgroup\" colSpan=\"3\" className=\"my-sticky-table-header1\">Продажа {context.currency}</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\" className=\"my-sticky-table-header2\">Цена</th>\n                            <th scope=\"col\" className=\"my-sticky-table-header2\">Кол-во</th>\n                            <th scope=\"col\" className=\"my-sticky-table-header2 d-none d-lg-table-cell\">Всего</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {bids.map((bid) => (\n                            <tr>\n                                <td>{bid[0]}</td>\n                                <td>{bid[1]}</td>\n                                <td className=\"d-none d-lg-table-cell\">{bid[0] * bid[1]}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","binanceSDK","getOrderBook","currency","fetch","res","status","Error","json","resData","catch","getOrderBookUpdates","ws","WebSocket","onopen","onerror","Content","state","asks","bids","context","props","response","setState","console","log","toLowerCase","onmessage","message","newAsks","JSON","parse","data","a","newBids","b","className","scope","colSpan","map","ask","bid","Component","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"sourceRoot":""}